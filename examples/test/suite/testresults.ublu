# testresults.ublu
# Result Browser for
# Test Suite for Ublu Midrange and Mainframe Life Cycle Extension language
# https://github.com/jwoehr/ublu
# Copyright (C) 2017 Jack J. Woehr http://www.softwoehr.com
# See the Ublu license (BSD-2 open source)

# Assumes examples is in the include path
include -s test_utils.ublu
include -s ansiesc.ublu

# Interactively browse test results
FUNC testresults ( sysname usessl uid passwd ifsfqp ) $[
    LOCAL @SYSTEM LOCAL @TESTFILE 
    LOCAL @OBJDESC LOCAL @FILENAME 
    LOCAL @LIBNAME LOCAL @RECORDS
    put -to ~ @@usessl
    ~ -to ~ -eq Y   
    as400 -to @SYSTEM -ssl ~ @@sysname @@uid @@passwd
    getfile ( @SYSTEM @@ifsfqp )
    tuple -assign @TESTFILE ~
    getdesc ( @SYSTEM @@ifsfqp )
    tuple -assign @OBJDESC ~
    fname ( @TESTFILE )
    tuple -assign @FILENAME ~
    libname ( @TESTFILE )
    tuple -assign @LIBNAME ~
    rall ( @TESTFILE )
    tuple -assign @RECORDS ~
    browse ( @SYSTEM @TESTFILE @OBJDESC @FILENAME @LIBNAME @RECORDS )
    @SYSTEM -disconnect 
    ansSetGraphicsMode ( *ans_AllOff )
]$

# Get the file  
FUNC getfile ( sys ifsfqp ) $[
    file -to ~ -as400 @@sys -keyed @@ifsfqp
]$

# Get file's object description  
FUNC getdesc ( sys ifsfqp ) $[
    objdesc -to ~ -as400 @@sys -path @@ifsfqp
]$
  
# Load all records from the file
FUNC loadall ( thefile ) $[ 
    @@thefile -to ~ -read ALL
]$

# Get filename  
FUNC fname ( thefile ) $[
    calljava -to ~ -method getFileName -obj @@thefile
]$

# Get libname  
FUNC libname ( thefile ) $[
    calljava -to ~ -method getLibraryName -obj @@thefile   
]$
  
# Read in all records 
FUNC rall ( thefile ) $[
    @@thefile -to ~ -read ALL
]$    

# Map one record
FUNC procrec ( rec ) $[
    LOCAL @recmap
    map -to @recmap
    
    @@rec -to ~ -getfieldbyname FILNAM
    ~ -to ~ -trim
    @recmap -add filename ~
    
    @@rec -to ~ -getfieldbyname TMSTRT
    @@rec -to ~ -getfieldbyname TMEND
    eval -to ~ - ~ ~
    @recmap -add millisecs ~
    
    @@rec -to ~ -getfieldbyname DESC
    ~ -to ~ -trim
    @recmap -add description ~
    
    @@rec -to ~ -getfieldbyname PFAIL
    @recmap -add pfail ~
    
    tuple -assign ~ @recmap
]$

# Proc all recs into maps and add to list  
FUNC procrecs ( recarray ) $[
    LOCAL @l
    list -to @l
    FOR @i @@recarray $[
        procrec ( @i )
        @l -add ~
    ]$
    tuple -assign ~ @l
]$

# Draw one screen of data
# dataScreen ( sys tfile od fname lname rec )
#   sys - as400
#   tfile - file obj
#   od - object desc object for file
#   fname - name of file
#   lname - name of lib
#   rec - mapped record to draw 
FUNC dataScreen ( sys tfile od fname lname rec ) $[
    LOCAL @sysname LOCAL @linenum
    
    calljava -to @sysname -method getSystemName -obj @@sys
    put -to @linenum 1 
        
    ansEraseDisplay ( )
    
    ansCursorPos ( 0 @linenum ) eval -to @linenum + @linenum 1
    
    put -to @modes *ans_AllOff
    put -to @modes *ans_Bold
    put -to @modes -s -append *ans_FgGreen
    put -to @modes -s -append *ans_BgBlack   
    ansSetGraphicsMode ( @modes )
    
    put -n -s System: put -n -s @sysname
    put -n -s Library: put -n -s @@lname
    put -n -s File: put -n -s @@fname
    @@od -to ~ -valuestring TEXT_DESCRIPTION
    put -n -s Run: put -n ~      
    
    ansCursorPos ( 0 @linenum ) eval -to @linenum + @linenum 1
    
    @@rec -to ~ -. filename put -n ${ Test module: }$  put -n -s ~
    @@rec -to ~ -. millisecs  put -n ${ Milliseconds: }$ put -n -s ~ 
    put -n ${ Pass/Fail: }$
    @@rec -to ~ -. pfail lifo -dup  
    ~ -to ~ -eq P
    IF ~ THEN $[
       put -n PASS
    ]$ ELSE $[
       ansSetGraphicsMode ( *ans_FgRed )
       put -n FAIL
       ansSetGraphicsMode ( *ans_FgGreen )
    ]$
      
    @@rec -to ~ -. description
    ~ -to ~ -split \:
    list -to ~ -source ~
    FOR @j ~ $[
        ansCursorPos ( 0 @linenum ) eval -to @linenum + @linenum 1        
        put -n ${ Description: }$ put -n @j
    ]$    
]$      
     
 # put -to @modes -s -append *ans_Underscore    
 # put -to @modes -s -append *ans_FgGreen
 # put -to @modes -s -append *ans_BgBlack
 # ansSetGraphicsMode ( @modes )

# Browse test records   
FUNC browse ( sys tfile od fname lname recs ) $[
    procrecs ( @@recs )
    
    FOR @i ~ $[
        dataScreen ( @@sys @@tfile @@od @@fname @@lname @i )
        ask -to NULL:
        ansEraseDisplay ( )
    ]$

      ansCursorPos ( 0 1 ) 
]$
      
# Browse test records   
# FUNC browse ( sys tfile od fname lname recs ) $[
# procrecs ( @@recs )
#    LOCAL @desclines
#    FOR @i ~ $[
#        @i -to ~ -. filename put -n ${ Test file: }$ put ~ 
#        @i -to ~ -. description
#        ~ -to ~ -split \:
#        list -to ~ -source ~
#        FOR @j ~ $[        
#            put -n ${ Description: }$ put @j
#        ]$
#        @i -to ~ -. millisecs put -n ${ Milliseconds: }$ put ~ 
#        @i -to ~ -. pfail put -n ${ Pass/Fail: }$ put ~ 
#    ]$
# ]$

# end  