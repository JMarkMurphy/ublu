# writesrc.ublu ... write program to member of a source physical file
# Example from Ublu https://github.com/jwoehr/ublu
# Copyright (C) 2017 Jack J. Woehr http://www.softwoehr.com
# See the Ublu license (BSD-2 open source)

# writesrc ( sys streamfpath ifsfqp )
# Given
#   sys ... an as400 object
#   streamfpath ... a path to a local stream file
#   ifsfqp ... a fully qualified IFS path to a source member
# Write the contents of the local file to the remote source phys file member.
# Member must already exist and should be empty.
# No line of the stream file should be longer than the SRCDAT field width
# of the target physical file.
# E.g.
#   writesrc ( @mysys @streamfile /QSYS.LIB/MYLIB.LIB/QCLSRC.FILE/MYPROG.MBR )
#
FUNC writesrc ( sys streamfpath ifsfqp ) $[
   LOCAL @streamfiletuple
   LOCAL @srcpftuple
   getSourceStream ( @@streamfpath @streamfiletuple )
   getTargetMember ( @@sys @@ifsfqp @srcpftuple )
   writeData ( @streamfiletuple @srcpftuple )
   @streamfiletuple -close
   @srcpftuple -close
]$

# getTargetMember ( sys ifsfqp filetuple )
# Get a record file and open for write
FUNC getTargetMember ( sys ifsfqp filetuple ) $[
    file -as400 @@sys -to @@filetuple -sequential @@ifsfqp
    @@filetuple -open  W 
]$

# Get stream file and open for read character
FUNC getSourceStream ( streamfpath streamftuple ) $[
    streamf -to @@streamftuple -new @@streamfpath
    @@streamftuple -open RC
]$

# writeData ( streamfiletuple srcpftuple )
FUNC writeData ( streamfiletuple srcpftuple ) $[
    LOCAL @fmt 
    LOCAL @thisline LOCAL @nnullline
    LOCAL @linenum
    @@srcpftuple -to @fmt -getfmt
    num -to @linenum -int 1
    @@srcpftuple -pos A
    
    @@streamfiletuple -to @thisline -rline
    test -to ~ -nnull @thisline
    
    WHILE ~ $[
        LOCAL @rec
        
        calljava -to @rec -- @fmt -method getNewRecord
        
        num -to ~ -bigdec @linenum
        @rec -setfieldbyname SRCSEQ ~
        string -to ~ -trim @thisline
        @rec -setfieldbyname SRCDTA ~
        
        @@srcpftuple -write @rec
        
        eval -to @linenum + @linenum 1
        @@streamfiletuple -to @thisline -rline
        test -to ~ -nnull @thisline
    ]$
]$

# Not used  
# padOrTrunc ( str padlen )
# push bl-padded string or truncated if longer than padlen (e.g., 100 chars)
FUNC padOrTrunc ( str padlen ) $[
    LOCAL @tmp LOCAL @mystr LOCAL @mypadlen    
    string -to @tmp -new
    @tmp -to @tmp -bl
    put -to @mystr @@str
    put -to @mypadlen @@padlen
    string -to ~ -len @mystr
    eval -to ~ > ~ @mypadlen
    IF ~ THEN $[
        string -to ~ -substr @mystr 0 @mypadlen
    ]$ ELSE $[
        string -to ~ -pad @mystr @tmp @mypadlen
    ]$
]$

# end