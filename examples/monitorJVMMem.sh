# monitorJVMMem.sh ... poll JVM memory via JMX and output SystemShepherd datapoints 
# autogenerated Thu Oct 16 13:08:49 MDT 2014 by jwoehr using command:
# gensh -to monitorJVMMem.sh -path /opt/ublu/ublu.jar -optr s SERVER @server ${ Server to monitor }$ -optr j JMX_PORT @jmxport ${ JMX listening port }$ -optr p PASSWORD @password ${ Password for JXM monitorRole }$ -optr l CRITLEVEL @critlevel ${ Critical heap used level }$ -optr m CRITMSG @critmsg ${ Message attached to datapoint when heap goes critical }$ ${ monitorJVMMem.sh ... poll JVM memory via JMX and output SystemShepherd datapoints }$ monitorJVMMem.ublu ${ monitorJVMMem ( @server @jmxport @password @critlevel @critmsg ) }$

# Usage message
function usage () { 
echo "Usage: $0 -h -s SERVER -j JMX_PORT -p PASSWORD -l CRITLEVEL -m CRITMSG "
echo "	where"
echo "	-h		display this help message and exit 0"
echo "	-s SERVER	Server to monitor  (required option)"
echo "	-j JMX_PORT	JMX listening port  (required option)"
echo "	-p PASSWORD	Password for JXM monitorRole  (required option)"
echo "	-l CRITLEVEL	Critical heap used level  (required option)"
echo "	-m CRITMSG	Message attached to datapoint when heap goes critical  (required option)"
echo "---"
echo "Exit code is the result of execution, or 0 for -h or 2 if there is an error in processing options"
}

# Process options
options=`getopt s:j:p:l:m:h  $*`
if [ $? != 0 ]
then
	usage
	exit 2
fi
for i in  $options  {
do
	case "$i"
	in
		-s)
			SERVER="$2";shift;
			shift;;

		-j)
			JMX_PORT="$2";shift;
			shift;;

		-p)
			PASSWORD="$2";shift;
			shift;;

		-l)
			CRITLEVEL="$2";shift;
			shift;;

		-m)
			CRITMSG="$2";shift;
			shift;;

		-h)
			usage;exit 0;shift;
			shift;;

		--)
			shift; break;;
	esac
done

# Translate options to tuple assignments
if [ "${SERVER}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @server -trim \${ ${SERVER} }$ "
else
	echo "Option -s SERVER is a required option but is not present."
	usage
	exit 2
fi
if [ "${JMX_PORT}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @jmxport -trim \${ ${JMX_PORT} }$ "
else
	echo "Option -j JMX_PORT is a required option but is not present."
	usage
	exit 2
fi
if [ "${PASSWORD}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @password -trim \${ ${PASSWORD} }$ "
else
	echo "Option -p PASSWORD is a required option but is not present."
	usage
	exit 2
fi
if [ "${CRITLEVEL}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @critlevel -trim \${ ${CRITLEVEL} }$ "
else
	echo "Option -l CRITLEVEL is a required option but is not present."
	usage
	exit 2
fi
if [ "${CRITMSG}" != "" ]
then
	gensh_runtime_opts="${gensh_runtime_opts}string -to @critmsg -trim \${ ${CRITMSG} }$ "
else
	echo "Option -m CRITMSG is a required option but is not present."
	usage
	exit 2
fi

# Invocation
java -jar /opt/ublu/ublu.jar ${gensh_runtime_opts} include monitorJVMMem.ublu monitorJVMMem \( @server @jmxport @password @critlevel @critmsg \) 
exit $?
