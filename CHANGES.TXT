CHANGES.TXT for Ublu Midrange and Mainframe Life Cycle Extension Language
Copyright (c) 2017, Jack J. Woehr jwoehr@softwoehr.com http://www.softwoehr.com
All rights reserved.

1.1.8
-----
* Optimizations
    * various
* Documentation
    * Explained how to make SSL connection 
    * Guide enhanced
* Commands
    * `as400 -nodefault` prevents setting service ports at instancing
    * `ask -nocons`
    * `dq` supports keyed data queues
    * `eval -max -min`
    * `file -addmbr`
    * `FUNC` can take func name from tuple pop or string
        * this makes it easier for FUNCs to define FUNCs
    * `help` now takes `--` cmdname
    * `map` creates user tuple maps
    * `props` picks up System property ublu.usage.linelength at startup
    * `rs` now takes the closure from either -from or eponymous
    * `sess` command missing break after -to
    * `string -lcase -upcase`
    * `tuple -assign` to non-existent tuple was failing
    * `usage/help` honors property `ublu.usage.linelength`
    * `WHILE` was failing on tuple stack ~ argument
* Examples
    * `createFileFromRecFormat.ublu`
    * `writesrc.ublu`
* Extensions
    * `ux.mbrdesc.ublu`
* Windowing
    * now executes rest of initial command line
    * set colors separately for input and output from menu
* Testing
    * progress on the framework
    * t.dq
    * t.record
    * test result browser
* Ubloid project started for Ublu on Android https://github/jwoehr/ubluoid

1.1.7 2017-07-05
-----
System
* Windowed Ublu
* Goublu support for Go language Ublu console (https://github.com/jwoehr/goublu)

Commands
* desktop
* interpreter
    * -args
    * -opts
    * -arg 
    * -opt 
    * -optarg 
    * -allargs   
* streamf -read (byte reads)

1.1.6 2017-06-01
-----
System
* Option processing improved

Commands
* BREAK - bug fixed, didn't work with nested blocks > 1
* cim and cimi for Common Information Model (added)
* calljava
    * -class
    * -forname
* dq now uses wait on -peek and -read
* eval
    * now does it as Long
        * added inc and dec
        * fixed bug where - mistaken for dash-command
* file greatly enhanced
* ftp command rewritten, new specifications
    * previous ftp command is now called 'oldftp'
* interpreter new command for interpreter debugging
* record greatly enhanced
* streamf new command for stream files on local system
* string
    * -pad
    * escape and unescape allow java-like string escapes
* tuple
    * -assign
        * -type returns class object
    * handle the tuple stack on -true -false -null
    
Examples
* clHelp.ublu
* delspoolf.ublu
* test/cimtest.ublu

Extensions
* ux.cim.property.ublu
* ux.dqentry.ublu
* ux.format.ublu
* ux.objectlock.ublu

1.1.5 2016-12-31
-----
General
* Taylor C. Richberger taywee@gmx.com has begun enhancing Ublu code and fixing
various shortfalls, e..g, see his work on the calljava and dpoint commands.

System
* default tuples
    * @true
    * @false
* interpreter
    * allow quoted strings as function arguments
    * allow blocks as function arguments

Commands
* general
    * more cleanup
    * ublu.includepath property management
* individual commands
    * calljava
        * properly deals with interfaces
    * db
        * -columnnames
        * bug: -bytes
    * dpoint
        * WARNING status now has message
        * dpoint allows a crit and warn alert comparator to work without value 
    * dta command for data areas
    * file
        * -createdds
        * -createfmt
        * -lock
        * -unlock
        * -writeall
        * -commitstart
        * -commit
        * -rollback
        * -commitend
        * change -pos BF to B
    * gensh
        * -strictPosix
        * gensh was generating bad documentary headers when passed plainwords.
        * -includepath
    * include
        * relative includes try to take ublu.includepath property into account
    * record
        * -create
        * -getcontents
        * -getfield[byname]
        * -getfields
        * -setcontents works more correctly
    * rs
        * -fileblob
        * -getblob
        * -lgetblob
        * -tofile
        * more destinations for blobs
    * tuple
        * account for the variety of as400 classes
        * -autonomic

Extensions
* general
    * some cleanup
* new
    * sysshep.qsys2.system_status.ublu
    * sysshep.qsys2.memory_pool.ublu
    * ux.msg.ublu
* updated
    * sysshep.qsys2.sysdiskstat.ublu
        * changed format
        
Examples
* fileAllBlobs.ublu

1.1.4 2016-11-04
-----
System
*   Debugger now handles autonomic variables

Commands
* general
    * minor fixes at Java level
    * major fixes to rs and db
* individual commands
    * num -bin
    * outq and printer rationalized
        * outq -get -getint -getfloat -getstring
        * outq removed superflous dash-commands
        * printer -getint -getfloat -getstring
    * rs & ftp bug in close deleting tuple fixed
    * rs
        * -bytes added
        * -close?? dash-commands  no longer delete tuple
        * -get -lget
        * -abs -rel -next
    * savesys
    
Extensions
* new
    * ux.printobj.ublu
    * sysshep directory
    
1.1.3 2016-10-14
System:
* Much refactoring at the Java level
* ublu.Ublu takes -include (i) switch and -silent (s) switch
* autonomic tuple variables
* save and restore const map
* ublu.util.Renderer
    * ObjectLockListEntry    

Commands:
* general
    * deprecate -instance in favor of -new
    * command descriptions cleaned up
    * some commands' argument parsing modernized
* individual commands    
    * const -list
    * db -json
    * IF now tests for null as well as not-true-not-false
    * ifs -fromfile
    * include -s (for -silent)
    * joblog command added
    * json command added
    * job -hold -release
    * lifo -true -false -null
    * msgq no longer does automatic close
    * printer -wtrjob
    * printer -get works for all attributes now
    * put pushes null correctly
    * RETURN removed (doesn't work correctly)
    * rs -json
    * string --,-string -toascii -toas400
    * system modernized
    * tuple -autonome(s)

Miscellaneous:
* Update vim mode
* ubluref.html example for FUNC corrected
* ubluref.html many minor corrections
* More guide - notes on tuple stack usage
* Update build file and welcome message

Examples:
* new
    * joblogstuff.ublu
    * test/testjson.ublu
    * test/testnum.ublu
* updated
    * all or most updated -new in place of -instance
    * dbexample.ublu
    * msgstuff.ublu
    * test/testlist.ublu
    
Extensions (extending Ublu in Ublu) in the new extensions subdir:
* ux.objectlock.ublu 
* ux.user.ublu

1.1.2
Changes to commands:
* ~ works -to and -from and with the put command correctly creating anonymous tuples as needed
* const command added
* cs command added
* updates to db command
* file command added
* record command added
* sock command added
* trace command added
* server command now allows execution of a "canned" program rather
      than simple direct access to the Ublu interpreter.
* multiple server instances now allowed.  
* string -uchar now can take a string of hexvals instead of only one
* removed -from from commandcall and parse arguments better
* programcall works better
* added as400 -setaspgrp -socket -netsocket
* added -byte to num command
* list command supports object arrays and -toarray
* put command wraps non-tuples in anonymous tuple to push to tuple stack
    
New examples:
* dbexample.ublu
* ifsstuff.ublu
* stringpush.ublu
* and some in the examples/test directory

Miscellaneous:
* Deprecate providing system/userid/password as arguments to most
      commands (use as400 object created by as400 command instead)
* Javadoc cleaned up
* SmapiHelper javadoc cleanup
* Ublu JEdit mode (ublu.xml)
    * Fixed digits problem
    * Added keywords
* More and better documentation
* Made it simpler to add MSSQL support in if user desires it.

1.1.1
Bug fix and feature add revision. Many bugs fixed and much code cleaned up.
Documentation improved.
    
Changes to commands:
* DO now has -undo to allow decremental looping
* IF now has -! to invert the sense of the logical test
* monitor
    * now takes an as400 instance instead of credentials
    * now takes worklib ~@{libname} for it working library on the server        
* RETURN command (new) leaves a FUNC or defun
* tn5250 and session commands (new) allow a screen-scraping telnet 5250
* tuple now takes -istuplename to test for validity of tuple name
    
New examples:
* connect5250.ublu
* describe_object.ublu
    
1.1.0
    - Code cleanup
    - More documentation
    - Vim and jEdit editor modes

